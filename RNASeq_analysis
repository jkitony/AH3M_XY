#/data1/jkitony/Cannabis/AH3M_XY 
#Overview
#Csat RNASeq 
Transcripts expressions were calculated via https://gitlab.com/salk-tm/snake_salmon for AH3M. Samples details below.

#Files in the directory after run: s3://salk-tm-dev/cannabis/flcDNA/quants//AH3M_cds_salmon.v2 and /AH3M_genome_salmon.v2
1.quant file - TPM raw
2.samples PCA
3.Stats
4.TPM matrix - raw

#Location:
1.s3://salk-tm-dev/cannabis/flcDNA/quants/AH3M_final_salmon/

#Overview of RNASeq experiment
#Long reads
AH3M; leaf and flower for four plants (2male and 2female) collecte at (8AM and 8pm)

#Names haplotypes
AH3Ma=
AH3Mb=

#Other info. temp seabiscuit:#/data1/jkitony/Cannabis/AH3M_XY 
#Reference file were created as follows
#download the two haplotypes reference and concat
aws s3 cp s3://salk-tm-dev/nolan_temp/csat_helixer/AH3Ma.helixer/AH3Ma.v2.munged/AH3Ma.v2.genome.fasta.gz .
aws s3 cp s3://salk-tm-dev/nolan_temp/csat_helixer/AH3Mb.helixer/AH3Mb.v2.munged/AH3Mb.v2.genome.fasta.gz .
cat AH3Ma.v2.genome.fasta.gz AH3Mb.v2.genome.fasta.gz > AH3M.concat.v2.genome.fasta.gz

#Metadata 1_sample tracking #https://docs.google.com/spreadsheets/d/1-r0PweCt4K0hQsKrc1uxjkNAZMee-PwJxkYVxPGprig/edit?gid=1311696726#gid=1311696726
Csat_AceHigh_Plant_A.pass_cDNA.R000-793.L005-467.fastq.gz   8am male leaf plant A
Csat_AceHigh_Plant_A.pass_cDNA.R000-793.L005-468.fastq.gz   8am male flower plant A
Csat_AceHigh_Plant_A.pass_cDNA.R000-794.L005-475.fastq.gz   8am male leaf plant B
Csat_AceHigh_Plant_A.pass_cDNA.R000-794.L005-476.fastq.gz   8am male flower plant B
Csat_AceHigh_Plant_B.pass_cDNA.R000-793.L005-469.fastq.gz   8am female leaf plant C
Csat_AceHigh_Plant_B.pass_cDNA.R000-793.L005-470.fastq.gz   8am female flower plant C
Csat_AceHigh_Plant_B.pass_cDNA.R000-794.L005-477.fastq.gz   8am female leaf plant D
Csat_AceHigh_Plant_B.pass_cDNA.R000-794.L005-478.fastq.gz   8am female flower plant D
Csat_AceHigh_Plant_C.pass_cDNA.R000-793.L005-471.fastq.gz   8pm male leaf plant A
Csat_AceHigh_Plant_C.pass_cDNA.R000-793.L005-472.fastq.gz   8pm male flower plant A
Csat_AceHigh_Plant_C.pass_cDNA.R000-794.L005-479.fastq.gz   8pm male leaf plant B
Csat_AceHigh_Plant_C.pass_cDNA.R000-794.L005-480.fastq.gz   8pm male flower plant B
Csat_AceHigh_Plant_D.pass_cDNA.R000-793.L005-473.fastq.gz   8pm female leaf plant C
Csat_AceHigh_Plant_D.pass_cDNA.R000-793.L005-474.fastq.gz   8pm female flower plant C
Csat_AceHigh_Plant_D.pass_cDNA.R000-794.L005-481.fastq.gz   8pm female leaf plant D
Csat_AceHigh_Plant_D.pass_cDNA.R000-794.L005-482.fastq.gz   8pm female flower plant D
######################################################################################################################################################################
#Actual analysis
######################################################################################################################################################################
#download the two haplotypes reference and concat
aws s3 cp s3://salk-tm-dev/nolan_temp/csat_helixer/AH3Ma.helixer/AH3Ma.v2.munged/AH3Ma.v2.genome.fasta.gz .
aws s3 cp s3://salk-tm-dev/nolan_temp/csat_helixer/AH3Mb.helixer/AH3Mb.v2.munged/AH3Mb.v2.genome.fasta.gz .
cat AH3Ma.v2.genome.fasta.gz AH3Mb.v2.genome.fasta.gz > AH3M.concat.v2.genome.fasta.gz

aws s3 cp s3://salk-tm-dev/nolan_temp/csat_helixer/AH3Ma.helixer/AH3Ma.v2.munged/AH3Ma.v2.cds.fasta.gz .
aws s3 cp s3://salk-tm-dev/nolan_temp/csat_helixer/AH3Mb.helixer/AH3Mb.v2.munged/AH3Mb.v2.cds.fasta.gz .
cat AH3Ma.v2.cds.fasta.gz AH3Mb.v2.cds.fasta.gz > AH3Mb.concat.v2.cds.fasta.gz

#download the RNASeq for the four plants (2Y and 2X) flcDNA Seq
aws s3 ls s3://salk-tm-raw/reads/AceHigh_male_experiment/ --recursive | awk '/\.pass_cDNA.*\.fastq\.gz$/ {print $4}' | xargs -I{} aws s3 cp s3://salk-tm-raw/{} .

#upload to s3 
aws s3 cp ./ s3://salk-tm-dev/cannabis/flcDNA/ --recursive --include "*"

############################
#Install the salmon workflow
#/data1/jkitony/my_workflows/
#git clone https://gitlab.com/salk-tm/snake_salmon.git
#cd snake_salmon
#mkdir logs
#conda activate snake
#Create json file for workflow to use
git status
git add configs/csat_AH3M.json
git commit -m "AH3M config"
git push
############################
#
#Call TPM via salmon workflow -map to cds
nohup snakemake -p -j 12 --tibanna --use-conda \
    --tibanna-config root_ebs_size=32 log_bucket=salk-tm-logs run_name=AH3M_cds_salmon.v1\
    --default-remote-prefix salk-tm-dev/cannabis/flcDNA/ \
    --default-resources mem_mb=500000 disk_mb=5000000 \
    --configfile configs/csat_AH3M.json \
    --config \
        reference=AH3Mb.concat.v2.cds.fasta \
        outbase=quants/AH3M_cds_salmon.v2 > logs/AH3M_cds_salmon91924.log 2>&1 &

#Call TPM via salmon workflow -map to genome
nohup snakemake -p -j 12 --tibanna --use-conda \
    --tibanna-config root_ebs_size=32 log_bucket=salk-tm-logs run_name=AH3M_genome_salmon.v1\
    --default-remote-prefix salk-tm-dev/cannabis/flcDNA/ \
    --default-resources mem_mb=200000 disk_mb=2000000 \
    --configfile configs/csat_AH3M.json \
    --config \
        reference=AH3M.concat.v2.genome.fasta \
        outbase=quants/AH3M_genome_salmon.v2 > logs/AH3M_genome_salmon91924.log 2>&1 &



#Plot 

##########################
#chr Y genes:Extract Gene Information for Chromosome Y
#Have a list of genes specifically located on chromosome Y
#Filter 
#TPM values are already normalized for sequencing depth, scale across samples if needed
########################
#Not really info about Y genes
aws s3 cp s3://salk-tm-dev/nolan_temp/csat_helixer/AH3Ma.helixer/AH3Ma.v2.munged/AH3Ma.v2.gff3.gz .
aws s3 cp s3://salk-tm-dev/nolan_temp/csat_helixer/AH3Mb.helixer/AH3Mb.v2.munged/AH3Mb.v2.gff3.gz .
##########
#But Organize the Data
import pandas as pd

# Load the quant.tsv file
quant_data = pd.read_csv('quant.tsv', sep='\t')

# Load the list of chromosome Y genes
chromosome_y_genes = pd.read_csv('chromosome_y_genes.txt', header=None)

# Filter quantification data for genes on chromosome Y
chrom_y_expression = quant_data[quant_data['Name'].isin(chromosome_y_genes[0])]

# Reshape the data
chrom_y_expression = chrom_y_expression.pivot_table(index='Name', columns='Sample', values='TPM')

# Save the reshaped data
chrom_y_expression.to_csv('chromosome_y_expression_reshaped.tsv', sep='\t')

#Heatmap of TPM Values
import seaborn as sns
import matplotlib.pyplot as plt

# Plot heatmap of TPM values
plt.figure(figsize=(10, 8))
sns.heatmap(chrom_y_expression, cmap='viridis', annot=True)
plt.title('Heatmap of Chromosome Y Gene Expression (TPM)')
plt.xlabel('Samples')
plt.ylabel('Gene Name')
plt.show()

#Boxplots Comparing Male vs Female and Leaf vs Flower
import seaborn as sns
import matplotlib.pyplot as plt

# Melt the data for easier plotting with seaborn
chrom_y_expression_melted = pd.melt(chrom_y_expression.reset_index(), id_vars='Name', var_name='Sample', value_name='TPM')

# Split the sample into different factors for visualization
chrom_y_expression_melted['Time'] = chrom_y_expression_melted['Sample'].apply(lambda x: '8am' if '8am' in x else '8pm')
chrom_y_expression_melted['Gender'] = chrom_y_expression_melted['Sample'].apply(lambda x: 'Male' if 'male' in x else 'Female')
chrom_y_expression_melted['Tissue'] = chrom_y_expression_melted['Sample'].apply(lambda x: 'Leaf' if 'leaf' in x else 'Flower')

# Plot the data
plt.figure(figsize=(12, 6))
sns.boxplot(x='Tissue', y='TPM', hue='Gender', data=chrom_y_expression_melted)
plt.title('Chromosome Y Gene Expression by Tissue and Gender')
plt.show()

#Line Plot for Timepoint Comparisons
# Line plot for time comparison
plt.figure(figsize=(10, 6))
sns.lineplot(x='Time', y='TPM', hue='Tissue', style='Gender', data=chrom_y_expression_melted, markers=True, dashes=False)
plt.title('Chromosome Y Gene Expression Over Time')
plt.show()

#Additional Analysis
#comparisons between groups (e.g., male vs. female, leaf vs. flower) using an ANOVA or t-test








